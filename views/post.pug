extends layout

include comment
include commentForm

block link
  //- link(rel='stylesheet' href='https://cdn.jsdelivr.net/highlight.js/latest/styles/github.min.css')
  link(rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.1.2/styles/a11y-light.min.css")
  script(src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.1.2/highlight.min.js")
  script hljs.initHighlightingOnLoad()

  link(href="https://fonts.googleapis.com/css2?family=IBM+Plex+Mono&display=swap" rel="stylesheet")
  link(rel='stylesheet' href='/css/post.css')

block content
  .post-container(data-post-id=post.id)
    h1.post-title= post.title
    .post-info
      .post-author-image
        if post.User.thumbnail
          image(src=post.User.thumbnail alt='thumbnail')
        else
          i.material-icons#person-icon person
      .post-detail-info
        .post-author-name
          a(href=`/user/${post.User.username}`)= post.User.username
        .post-updated= post.published_at.toString().substring(4, 21)
    .post-tag
      for tag in tags
        span.tag= tag.name
      if post.thumbnail
        img.post-thumbnail(src=post.thumbnail)
    .post-content !{content}
    .post-like
      -const like = user && post.Liker && post.Liker.map(l => l.id).includes(user.id)
      if user && !like
        button.like
          i.material-icons favorite_border
      else if user && like
        button.unlike
          i.material-icons favorite
    .top-btn
      a(href='#') TOP
    if prev || next
      h3.pagination 글쓴이의 다른 글
      .pagination-body
        if prev
          button.prev-post(onclick=`location.href="/post/${prev.id}"`)
            .pagination-arrow
              .material-icons arrow_back
            .pagination-info
              .pagination-title 이전글
              .pagination-content= prev.title.length > 25 ? prev.title.substring(0, 25) + '...' : prev.title
        if next
          button.next-post(onclick=`location.href="/post/${next.id}"`)
            .pagination-info
              .pagination-title 다음글
              .pagination-content= next.title.length > 25 ? next.title.substring(0, 25) + '...' : next.title
            //- .pagination-content= '아무말이나 그냥 적어봅니다. 태스트입니다. 어떻게 될까요'.length > 20 ? 'd아무말이나 그냥 적어봅니다. 태스트입니다. 어떻게 될까요'.substring(0, 20) + '...' : next.title
            .pagination-arrow
              .material-icons arrow_forward
    .comments
      //- -const length = commentsLength? commentLength : 0
      h4= `${commentLength || 0}개의 댓글`
      for comment in commentsTree
        +comment(user, post, comment)
    if user
      //- form#comment-form(action=`/comments?postId=${post.id}` method='post')
      //-   textarea#comment-content(name='content' placeholder='댓글을 입력하세요.')
      //-   button.write(type='button') 댓글 쓰기
      //-   span.comment-error
      +comment-form(null, `/comments?postId=${post.id}`, null)
  script.
    var likeBtn = document.querySelector('.like');
    if(likeBtn) {
      likeBtn.addEventListener('click', function() {
        var post = document.querySelector('.post-container');
        var postId = post.dataset.postId;
        var xhr = new XMLHttpRequest();
        xhr.onload = function () {
          if (xhr.status === 200) {
            location.reload();
          } else {
            console.error(xhr.responseText);
          }
        };
        xhr.open('POST', '/post/' + postId + '/like');
        xhr.send();
      });
    }
    var unlikeBtn = document.querySelector('.unlike');
    if(unlikeBtn) {
      unlikeBtn.addEventListener('click', function() {
        console.log('unlike!!')
        var post = document.querySelector('.post-container');
        var postId = post.dataset.postId;
        console.log('postid:', postId);
        var xhr = new XMLHttpRequest();
        xhr.onload = function () {
          if (xhr.status === 200) {
            location.reload();
          } else {
            console.error(xhr.responseText);
          }
        };
        xhr.open('POST', '/post/' + postId + '/unlike');
        xhr.send();
      });
    }
    //- document.querySelector('.write').addEventListener('click', function() {
    //-   var content = document.getElementById('comment-content').value;
    //-   if(!content) {
    //-     this.parentNode.querySelector('.comment-error').innerHTML = '댓글을 입력하세요.'
    //-   } else {
    //-     //- document.getElementById('comment-form').submit();
    //-     this.parentElement.submit();
    //-   }
    //- });
    document.querySelectorAll('.reply').forEach(function(replyButton) {
      replyButton.addEventListener('click', function() {
        var commentId = this.dataset.id;
        var replyEnabled = document.querySelector('.comment-reply-enabled');
        var editEnabled = document.querySelector('.comment-edit-enabled');
        if(replyEnabled) {
          replyEnabled.classList.remove('comment-reply-enabled');
        }
        if(editEnabled) {
          editEnabled.classList.remove('comment-edit-enabled');
        }
        document.getElementById(`comment-${commentId}`).classList.add('comment-reply-enabled');
        //- console.log(document.querySelector('.comment-reply-enabled').childNodes);
        //- this.parentNode.parentNode.lastChild.classList.add('comment-reply-enabled');
        //- console.log(this.parentNode.parentNode.lastChild);
      });
    });
    document.querySelectorAll('.edit').forEach(function(editButton) {
      editButton.addEventListener('click', function() {
        console.log('edit!!!!!!');
        var commentId = this.dataset.id;
        var replyEnabled = document.querySelector('.comment-reply-enabled');
        var editEnabled = document.querySelector('.comment-edit-enabled');
        if(replyEnabled) {
          replyEnabled.classList.remove('comment-reply-enabled');
        }
        if(editEnabled) {
          editEnabled.classList.remove('comment-edit-enabled');
        }
        document.getElementById(`comment-${commentId}`).classList.add('comment-edit-enabled');
        //- this.parentNode.parentNode.lastChild.classList.add('comment-edit-enabled');
      });
    });
    document.querySelectorAll('.delete').forEach(function(deleteButton) {
      deleteButton.addEventListener('click', function() {
        if(confirm('삭제하시겠습니까?')) {
          this.parentElement.submit();
        }
      });
    });
    document.querySelectorAll('.submit').forEach(function(editButton) {
      editButton.addEventListener('click', function() {
        var form = this.parentElement;
        var content = form.querySelector('.comment-form-content').value;
        if(!content) {
          form.querySelector('.comment-error').innerHTML = '댓글을 입력하세요.'
        } else {
          form.submit();
        }
      });
    });
    document.querySelectorAll('.form-edit-cancel').forEach(function(cancelButton) {
      cancelButton.addEventListener('click', function() {
        var commentId = this.dataset.id;
        document.getElementById(`comment-${commentId}`).classList.remove('comment-edit-enabled');
      });
    });
    document.querySelectorAll('.form-reply-cancel').forEach(function(cancelButton) {
      cancelButton.addEventListener('click', function() {
        var commentId = this.dataset.id;
        document.getElementById(`comment-${commentId}`).classList.remove('comment-reply-enabled');
      });
    });